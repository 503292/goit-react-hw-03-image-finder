{"version":3,"sources":["image/Moogle.jpg","components/PhotoCard/PhotoCard.js","components/Button/Button.js","components/Gallery/Gallery.js","components/SearchForm/SearchForm.js","components/Modal/Modal.js","services/photo-api.js","components/App.js","index.js"],"names":["module","exports","PhotoCard","id","webformatURL","largeImageURL","likes","views","comments","downloads","handleOpenModal","className","src","data-src","alt","type","onClick","Button","handleClickBtn","Gallery","imagesInfo","map","el","index","key","SearchForm","state","query","page","handelChange","e","setState","target","value","handleSubmit","preventDefault","handleSubmitForm","props","resetSearch","this","onSubmit","onChange","autoComplete","placeholder","Component","Modal","overlayRef","createRef","handleBtnModal","code","handleCloseModal","handleModalOverlay","current","window","removeEventListener","addEventListener","onKeyUp","role","ref","API_KEY","process","getPhotos","axios","get","App","isModalOpen","largeImage","then","hits","data","catch","error","prevState","message","currentTarget","parentElement","firstChild","dataset","scrollTo","top","document","body","scrollHeight","behavior","pathImg","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1ed90307.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Moogle.0210d676.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PhotoCard = ({\n  id,\n  webformatURL,\n  largeImageURL,\n  likes,\n  views,\n  comments,\n  downloads,\n  handleOpenModal,\n}) => (\n  <li className=\"gallery-item\">\n    <div className=\"photo-card\">\n      <img\n        className=\"card-photo\"\n        src={webformatURL}\n        data-src={largeImageURL}\n        alt={id}\n      />\n\n      <div className=\"stats\">\n        <p className=\"stats-item\">\n          <i className=\"material-icons\">thumb_up</i>\n          {likes}\n        </p>\n        <p className=\"stats-item\">\n          <i className=\"material-icons\">visibility</i>\n          {views}\n        </p>\n        <p className=\"stats-item\">\n          <i className=\"material-icons\">comment</i>\n          {comments}\n        </p>\n        <p className=\"stats-item\">\n          <i className=\"material-icons\">cloud_download</i>\n          {downloads}\n        </p>\n      </div>\n\n      <button\n        type=\"button\"\n        onClick={handleOpenModal}\n        className=\"fullscreen-button\"\n      >\n        <i className=\"material-icons\">zoom_out_map</i>\n      </button>\n    </div>\n  </li>\n);\n\nPhotoCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  likes: PropTypes.number.isRequired,\n  views: PropTypes.number.isRequired,\n  comments: PropTypes.number.isRequired,\n  downloads: PropTypes.number.isRequired,\n  handleOpenModal: PropTypes.func.isRequired,\n};\n\nexport default PhotoCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ handleClickBtn }) => (\n  <div className=\"wrapBtn\">\n    <button type=\"button\" onClick={handleClickBtn} className=\"buttonLoad\">\n      Load more\n    </button>\n  </div>\n);\n\nButton.propTypes = {\n  handleClickBtn: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PhotoCard from '../PhotoCard/PhotoCard';\nimport Button from '../Button/Button';\n\nconst Gallery = ({ imagesInfo, handleClickBtn, handleOpenModal }) => (\n  <>\n    {' '}\n    <ul className=\"gallery\">\n      {imagesInfo.map((el, index) => (\n        <PhotoCard\n          // eslint-disable-next-line react/no-array-index-key\n          key={index}\n          id={el.id}\n          webformatURL={el.webformatURL}\n          largeImageURL={el.largeImageURL}\n          likes={el.likes}\n          views={el.views}\n          comments={el.comments}\n          downloads={el.downloads}\n          handleOpenModal={handleOpenModal}\n        />\n      ))}\n    </ul>\n    <Button handleClickBtn={handleClickBtn} />\n  </>\n);\n\nGallery.propTypes = {\n  imagesInfo: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  handleClickBtn: PropTypes.func.isRequired,\n  handleOpenModal: PropTypes.func.isRequired,\n};\n\nexport default Gallery;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchForm extends Component {\n  state = { query: '', page: 1 };\n\n  handelChange = e => {\n    this.setState({ query: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { handleSubmitForm } = this.props;\n\n    handleSubmitForm(this.state);\n\n    this.resetSearch();\n  };\n\n  resetSearch = () => {\n    this.setState({ query: '' });\n  };\n\n  render() {\n    const { query } = this.state;\n    return (\n      <form className=\"search-form\" onSubmit={this.handleSubmit}>\n        <input\n          onChange={this.handelChange}\n          value={query}\n          type=\"text\"\n          autoComplete=\"off\"\n          placeholder=\"Search images...\"\n        />\n      </form>\n    );\n  }\n}\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  handleSubmitForm: PropTypes.func.isRequired,\n};\n","import React, { Component, createRef } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Modal extends Component {\n  overlayRef = createRef();\n\n  componentWillMount() {\n    window.removeEventListener('keyup', this.handleBtnModal);\n  }\n\n  componentDidMount() {\n    window.addEventListener('keyup', this.handleBtnModal);\n  }\n\n  handleBtnModal = e => {\n    if (e.code !== 'Escape') {\n      return;\n    }\n    this.props.handleCloseModal();\n  };\n\n  handleModalOverlay = ({ target }) => {\n    const { current } = this.overlayRef;\n\n    if (target !== current) {\n      return;\n    }\n    this.props.handleCloseModal();\n  };\n\n  render() {\n    const { largeImageURL } = this.props;\n\n    return (\n      <>\n        <div\n          onKeyUp={this.handleBtnModal}\n          onClick={this.handleModalOverlay}\n          className=\"overlay\"\n          role=\"presentation\"\n          ref={this.overlayRef}\n        >\n          <div className=\"modal\">\n            <img\n              className=\"modal-photo\"\n              src={largeImageURL}\n              alt={largeImageURL}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nModal.propTypes = {\n  largeImageURL: PropTypes.string.isRequired,\n  handleCloseModal: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import axios from 'axios';\n\nconst CRIPT_KEY = process.env.REACT_APP_API_KEY;\n\nconst API_KEY = `&key=${CRIPT_KEY}`;\n\n/* eslint-disable-next-line */\nexport const getPhotos = (query = '', page = 1) =>\n  axios.get(\n    `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=12${API_KEY}`,\n  );\n\n// 13892199-58c163103ab3e33586f8e4337   DENA\n","import React, { Component } from 'react';\nimport Gallery from './Gallery/Gallery';\nimport SearchForm from './SearchForm/SearchForm';\nimport Modal from './Modal/Modal';\nimport { getPhotos } from '../services/photo-api';\nimport pathImg from '../image/Moogle.jpg';\n\nclass App extends Component {\n  state = {\n    imagesInfo: [],\n    query: '',\n    page: 1,\n    isModalOpen: false,\n    largeImage: '',\n  };\n\n  componentDidMount() {\n    const { query, page } = this.state;\n    getPhotos(query, page)\n      .then(({ data: { hits } }) =>\n        this.setState({\n          query,\n          imagesInfo: hits,\n          page: 2,\n        }),\n      )\n      .catch(error => error);\n  }\n\n  componentDidUpdate(prevState) {\n    const { query } = this.state;\n\n    if (prevState.query !== query) {\n      window.scrollTo({\n        top: document.body.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  handleSubmitForm = ({ query, page }) => {\n    getPhotos(query, page)\n      .then(({ data: { hits } }) =>\n        this.setState({\n          query,\n          imagesInfo: hits,\n          page: 2,\n        }),\n      )\n      .catch(error => error);\n  };\n\n  handleClickBtn = () => {\n    const { query, page } = this.state;\n    getPhotos(query, page)\n      .then(({ data }) =>\n        this.setState(prevState => ({\n          imagesInfo: [...prevState.imagesInfo, ...data.hits],\n          page: prevState.page + 1,\n        })),\n      )\n      .catch(error => error.message);\n  };\n\n  handleOpenModal = e => {\n    const { src } = e.currentTarget.parentElement.firstChild.dataset;\n    this.setState({ isModalOpen: true, largeImage: src });\n  };\n\n  handleCloseModal = () => this.setState({ isModalOpen: false });\n\n  render() {\n    const { isModalOpen, imagesInfo, query, largeImage } = this.state;\n    return (\n      <>\n        <img src={pathImg} alt=\"top-moogle\" className=\"topImage\" />\n\n        <SearchForm handleSubmitForm={this.handleSubmitForm} query={query} />\n\n        <Gallery\n          imagesInfo={imagesInfo}\n          handleClickBtn={this.handleClickBtn}\n          handleOpenModal={this.handleOpenModal}\n        />\n\n        {isModalOpen && (\n          <Modal\n            className=\"modal-photo-card\"\n            handleCloseModal={this.handleCloseModal}\n            largeImageURL={largeImage}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}